<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="77716" started-at="2020-03-07T19:49:00Z" finished-at="2020-03-07T19:50:18Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="77716" started-at="2020-03-07T19:49:00Z" finished-at="2020-03-07T19:50:18Z">
      <class name="com.midtrans.demo.testcases.ProductPurchaseTest">
        <test-method status="FAIL" signature="setup()[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="setup" is-config="true" duration-ms="0" started-at="2020-03-08T01:19:02Z" finished-at="2020-03-08T01:19:02Z">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[session not created: This version of ChromeDriver only supports Chrome version 81
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Pune-Laptop136', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-170-generic', java.version: '1.8.0_232'
Driver info: driver.version: ChromeDriver
remote stacktrace: #0 0x55968eb8c3e9 <unknown>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 81
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Pune-Laptop136', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-170-generic', java.version: '1.8.0_232'
Driver info: driver.version: ChromeDriver
remote stacktrace: #0 0x55968eb8c3e9 <unknown>

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)
	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:122)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:531)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at com.midtrans.demo.BaseClass.TestBase.initialisation(TestBase.java:76)
	at com.midtrans.demo.testcases.ProductPurchaseTest.setup(ProductPurchaseTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="ProductPurchaseSuccessFlowTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="ProductPurchaseSuccessFlowTest" duration-ms="27" started-at="2020-03-08T01:20:18Z" data-provider="addCustomerDetails" finished-at="2020-03-08T01:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nilesh1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1236627372]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pune,Maharshtra,India]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6734732]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Credit Card]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[4811 1111 1111 1114]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3/20]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[112233]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductPurchaseSuccessFlowTest -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-03-08T01:20:18Z" finished-at="2020-03-08T01:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="setup" is-config="true" duration-ms="0" started-at="2020-03-08T01:20:18Z" finished-at="2020-03-08T01:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="ProductPurchaseSuccessFlowTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="ProductPurchaseSuccessFlowTest" duration-ms="11" started-at="2020-03-08T01:20:18Z" data-provider="addCustomerDetails" finished-at="2020-03-08T01:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nilesh2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test2@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1236627373]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Torronto,Canada]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9869868]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Credit Card]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[4911 1111 1111 1113]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[3/20]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[112233]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductPurchaseSuccessFlowTest -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.midtrans.demo.testcases.ProductPurchaseTest@3701eaf6]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-03-08T01:20:18Z" finished-at="2020-03-08T01:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.midtrans.demo.testcases.ProductPurchaseTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
